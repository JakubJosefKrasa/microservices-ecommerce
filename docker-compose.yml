services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: ${EUREKA_SERVER_CONTAINER_NAME}
    networks:
      eshop-network:
        aliases:
          - ${EUREKA_SERVER_HOST}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${EUREKA_SERVER_PORT}/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5


  postgres-auth:
    image: postgres:16
    container_name: ${POSTGRES_AUTH_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_AUTH_DB}
      POSTGRES_USER: ${POSTGRES_AUTH_USER}
      POSTGRES_PASSWORD: ${POSTGRES_AUTH_PASSWORD}
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_AUTH_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_AUTH_USER} -d ${POSTGRES_AUTH_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      eshop-network:
        aliases:
          - ${POSTGRES_AUTH_HOST}

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    environment:
      EUREKA_SERVER_URL: "http://${EUREKA_SERVER_HOST}:${EUREKA_SERVER_PORT}/eureka"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://${POSTGRES_AUTH_HOST}:5432/${POSTGRES_AUTH_DB}"
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_AUTH_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_AUTH_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      APPLICATION_SECURITY_JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      APPLICATION_SECURITY_JWT_EXPIRATION: ${JWT_EXPIRATION}
      AUTH_APP_NAME: ${AUTH_APP_NAME}
    networks:
      - eshop-network
    depends_on:
      postgres-auth:
        condition: service_healthy


  postgres-product:
    image: postgres:16
    container_name: ${POSTGRES_PRODUCT_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_PRODUCT_DB}
      POSTGRES_USER: ${POSTGRES_PRODUCT_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PRODUCT_PASSWORD}
    volumes:
      - postgres-product-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PRODUCT_PORT:-5434}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_PRODUCT_USER} -d ${POSTGRES_PRODUCT_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      eshop-network:
        aliases:
          - ${POSTGRES_PRODUCT_HOST}

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product-service
    environment:
      EUREKA_SERVER_URL: "http://${EUREKA_SERVER_HOST}:${EUREKA_SERVER_PORT}/eureka"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://${POSTGRES_PRODUCT_HOST}:5432/${POSTGRES_PRODUCT_DB}"
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_PRODUCT_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PRODUCT_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      PRODUCT_APP_NAME: ${PRODUCT_APP_NAME}
    volumes:
      - product-images:/app/uploads
    networks:
      - eshop-network
    depends_on:
      postgres-product:
        condition: service_healthy


  postgres-cart:
    image: postgres:16
    container_name: ${POSTGRES_CART_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_CART_DB}
      POSTGRES_USER: ${POSTGRES_CART_USER}
      POSTGRES_PASSWORD: ${POSTGRES_CART_PASSWORD}
    volumes:
      - postgres-cart-data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_CART_PORT:-5435}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_CART_USER} -d ${POSTGRES_CART_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      eshop-network:
        aliases:
          - ${POSTGRES_CART_HOST}

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    container_name: cart-service
    environment:
      EUREKA_SERVER_URL: "http://${EUREKA_SERVER_HOST}:${EUREKA_SERVER_PORT}/eureka"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://${POSTGRES_CART_HOST}:5432/${POSTGRES_CART_DB}"
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_CART_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_CART_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      CART_APP_NAME: ${CART_APP_NAME}
    networks:
      - eshop-network
    depends_on:
      postgres-cart:
        condition: service_healthy

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: ${API_GATEWAY_CONTAINER_NAME}
    environment:
      EUREKA_SERVER_URL: "http://${EUREKA_SERVER_HOST}:${EUREKA_SERVER_PORT}/eureka"
      API_GATEWAY_HOST: ${API_GATEWAY_HOST}
      AUTH_APP_NAME: ${AUTH_APP_NAME}
      PRODUCT_APP_NAME: ${PRODUCT_APP_NAME}
      CART_APP_NAME: ${CART_APP_NAME}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"
    networks:
      - eshop-network
    depends_on:
      eureka-server:
        condition: service_healthy


volumes:
  postgres-auth-data: {}
  postgres-product-data: {}
  postgres-cart-data: {}
  product-images: {}

networks:
  eshop-network:
    driver: bridge